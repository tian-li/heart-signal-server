{"version":3,"sources":["./src/app/components/room/room.component.ts","./src/app/components/room/room.component.html","./src/app/components/landing/landing.component.ts","./src/app/components/landing/landing.component.html","./src/app/services/socket.service.ts","./src/app/store/message/message.selectors.ts","./src/app/shared/utils.ts","./src/environments/environment.ts","./src/app/store/message/message.reducers.ts","./src/app/components/read-me/read-me.component.ts","./src/app/components/read-me/read-me.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/store/message/message.actions.ts","./src/app/store/index.ts","./src/app/app.module.ts","./src/app/store/message/index.ts","./src/app/services/room.guard.ts","./src/app/services/message.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {SocketService} from '../../services/socket.service';\r\nimport {User} from '../../shared/user';\r\nimport {select, Store} from '@ngrx/store';\r\nimport {combineLatest} from 'rxjs';\r\nimport {Message} from '../../shared/message';\r\nimport {selectAllMessagesByTime} from '../../store/message';\r\nimport {FormControl} from '@angular/forms';\r\nimport {MessageService} from '../../services/message.service';\r\nimport {map} from 'rxjs/operators';\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport {CdkVirtualScrollViewport} from '@angular/cdk/scrolling';\r\nimport {PlayerMessage} from \"../../shared/player-message\";\r\n\r\n@Component({\r\n  selector: 'app-room',\r\n  templateUrl: './room.component.html',\r\n  styleUrls: ['./room.component.scss']\r\n})\r\nexport class RoomComponent implements OnInit {\r\n  @ViewChild('scrollViewport') scrollViewport: CdkVirtualScrollViewport;\r\n\r\n  messages: Message[] = [];\r\n  usersInRoom: User[] = [];\r\n  playersInRoom: User[] = [];\r\n  observersInRoom: User[] = [];\r\n  otherPlayers: User[] = [];\r\n  playerDisplayedColumns = ['username', 'connected', 'messageStatus'];\r\n  observersDisplayedColumns = ['username', 'connected'];\r\n  socket;\r\n\r\n  messageFormControl;\r\n  toUserControl;\r\n  extraMessageUserControl;\r\n  isFormValid: boolean;\r\n  roomClosed = false;\r\n\r\n  user: User;\r\n  roomNumber;\r\n  currentRound;\r\n  canSendPlayerMessage;\r\n  disapprovedMessageId;\r\n\r\n  userRoleDisplay = '';\r\n\r\n  usersNotSendMessage = [];\r\n\r\n  hasPendingApprovalMessage;\r\n\r\n  constructor(\r\n    private socketService: SocketService,\r\n    private messageService: MessageService,\r\n    private store: Store\r\n  ) {\r\n  }\r\n\r\n  useMockData() {\r\n    this.user = {\r\n      username: '1',\r\n      userRole: 'host',\r\n      roomNumber: '1',\r\n      id: 'M8bmlezxCyL6z5uSAAAf',\r\n      connected: true,\r\n    };\r\n\r\n    this.messages = [\r\n      {\r\n        id: '09c8d442-ba02-4f9a-8f47-c7ca43b10d87',\r\n        fromName: '1',\r\n        toName: '2',\r\n        content: 'hi 2',\r\n        timestamp: 1605585624931,\r\n        published: false,\r\n        approvalStatus: 'disapproved',\r\n        type: 'playerMessage',\r\n        roundIndex: 1,\r\n      },\r\n      {\r\n        id: '09c8d442-ba02-4f9a-8f47-c7ca43b10d87',\r\n        fromName: '1',\r\n        toName: '2',\r\n        content: 'hi 2',\r\n        timestamp: 1605585624931,\r\n        published: false,\r\n        approvalStatus: 'approved',\r\n        type: 'playerMessage',\r\n        roundIndex: 2,\r\n      },\r\n\r\n      {\r\n        id: 'vdf234143234',\r\n        fromName: '1',\r\n        toName: '2',\r\n        content: 'hi 2',\r\n        timestamp: 1605585624931,\r\n        published: false,\r\n        approvalStatus: 'approved',\r\n        type: 'playerMessage',\r\n        roundIndex: 3,\r\n      },\r\n      {\r\n        id: 'asd123123',\r\n        content: '阿里看得见我缺个人北纬科技房东不哦IP参与ISO阿哥，千万人委屈，恩情请问，去恩情，问去，问去，问去，问，且，前二废弃物的请问，，圈请问去',\r\n        timestamp: 1605585624931,\r\n        approvalStatus: 'pending',\r\n        type: 'systemMessage',\r\n        actionRequired: true,\r\n      },\r\n    ];\r\n\r\n    this.observersInRoom = [\r\n      {\r\n        id: 'toId',\r\n        username: '目标',\r\n        userRole: 'observer',\r\n        roomNumber: '123',\r\n        connected: true,\r\n      },\r\n      {\r\n        id: 'toId',\r\n        username: '目标',\r\n        userRole: 'observer',\r\n        roomNumber: '123',\r\n        connected: true,\r\n      },\r\n      {\r\n        id: 'toId',\r\n        username: '目标',\r\n        userRole: 'observer',\r\n        roomNumber: '123',\r\n        connected: true,\r\n      },\r\n      {\r\n        id: 'toId',\r\n        username: '目标',\r\n        userRole: 'observer',\r\n        roomNumber: '123',\r\n        connected: true,\r\n      },\r\n      {\r\n        id: 'toId',\r\n        username: '目标',\r\n        userRole: 'observer',\r\n        roomNumber: '123',\r\n        connected: true,\r\n      },\r\n      {\r\n        id: 'toId',\r\n        username: '目标',\r\n        userRole: 'observer',\r\n        roomNumber: '123',\r\n        connected: true,\r\n      },\r\n      {\r\n        id: 'toId',\r\n        username: '目标',\r\n        userRole: 'observer',\r\n        roomNumber: '123',\r\n        connected: true,\r\n      },\r\n      {\r\n        id: 'toId',\r\n        username: '目标',\r\n        userRole: 'observer',\r\n        roomNumber: '123',\r\n        connected: true,\r\n      },\r\n      {\r\n        id: 'toId',\r\n        username: '目标',\r\n        userRole: 'observer',\r\n        roomNumber: '123',\r\n        connected: true,\r\n      },\r\n      {\r\n        id: 'toId',\r\n        username: '目标',\r\n        userRole: 'observer',\r\n        roomNumber: '123',\r\n        connected: true,\r\n      },\r\n      {\r\n        id: 'toId',\r\n        username: '目标',\r\n        userRole: 'observer',\r\n        roomNumber: '123',\r\n        connected: true,\r\n      },\r\n      {\r\n        id: 'toId',\r\n        username: '目标',\r\n        userRole: 'observer',\r\n        roomNumber: '123',\r\n        connected: true,\r\n      },\r\n      {\r\n        id: 'toId',\r\n        username: '目标',\r\n        userRole: 'observer',\r\n        roomNumber: '123',\r\n        connected: true,\r\n      },\r\n      {\r\n        id: 'toId',\r\n        username: '目标',\r\n        userRole: 'observer',\r\n        roomNumber: '123',\r\n        connected: true,\r\n      },\r\n      {\r\n        id: 'toId',\r\n        username: '目标',\r\n        userRole: 'observer',\r\n        roomNumber: '123',\r\n        connected: true,\r\n      },\r\n      {\r\n        id: 'toId',\r\n        username: '目标',\r\n        userRole: 'observer',\r\n        roomNumber: '123',\r\n        connected: true,\r\n      },\r\n      {\r\n        id: 'toId',\r\n        username: '目标',\r\n        userRole: 'observer',\r\n        roomNumber: '123',\r\n        connected: true,\r\n      },\r\n      {\r\n        id: 'toId',\r\n        username: '目标',\r\n        userRole: 'observer',\r\n        roomNumber: '123',\r\n        connected: true,\r\n      },\r\n      {\r\n        id: 'toId',\r\n        username: '目标',\r\n        userRole: 'observer',\r\n        roomNumber: '123',\r\n        connected: true,\r\n      },\r\n      {\r\n        id: 'toId',\r\n        username: '目标',\r\n        userRole: 'observer',\r\n        roomNumber: '123',\r\n        connected: true,\r\n      },\r\n\r\n    ];\r\n\r\n    this.playersInRoom = this.observersInRoom;\r\n  }\r\n\r\n  useRealData() {\r\n    this.user = this.socketService.user;\r\n\r\n    if (this.user.userRole === 'player') {\r\n      this.userRoleDisplay = '玩家'\r\n    }\r\n\r\n    if (this.user.userRole === 'observer') {\r\n      this.userRoleDisplay = '观众'\r\n    }\r\n\r\n    this.roomNumber = this.socketService.getRoomNumber();\r\n\r\n    this.socketService.currentRound$.subscribe(currentRound => {\r\n      this.currentRound = currentRound;\r\n    });\r\n\r\n    this.socketService.canSendPlayerMessage$.subscribe(canSendPlayerMessage => {\r\n      this.canSendPlayerMessage = canSendPlayerMessage;\r\n    });\r\n\r\n    this.store.pipe(\r\n      select(selectAllMessagesByTime),\r\n      map(messages => {\r\n        if (this.user.userRole === 'host') {\r\n          return messages;\r\n        } else {\r\n          return messages.filter(message => message.type === 'playerMessage');\r\n        }\r\n      }),\r\n    ).subscribe((messages) => {\r\n      this.messages = messages;\r\n\r\n      this.hasPendingApprovalMessage = this.messages.some(m => m.approvalStatus === 'pending');\r\n\r\n      if (this.canSendPlayerMessage) {\r\n        this.findUsersNotSendMessage();\r\n      }\r\n\r\n\r\n    });\r\n\r\n    this.socketService.usersInRoom$.subscribe((users) => {\r\n      this.usersInRoom = users;\r\n      this.observersInRoom = users.filter(user => user.userRole === 'observer');\r\n      this.playersInRoom = users.filter(user => user.userRole === 'player');\r\n      this.otherPlayers = this.playersInRoom.filter(user => user.username !== this.user.username);\r\n    });\r\n  }\r\n\r\n  findUsersNotSendMessage() {\r\n    this.usersNotSendMessage = [];\r\n    const usersSentMessage = this.messages.filter((m: Message) => {\r\n      return m.type === 'playerMessage' && m.roundIndex === this.currentRound\r\n    }).map((m: PlayerMessage) => {\r\n      return m.fromName\r\n    });\r\n\r\n    this.playersInRoom.forEach(p => {\r\n      if (!usersSentMessage.find(u => u === p.username)) {\r\n        this.usersNotSendMessage.push(p.username)\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.socket = this.socketService.socket;\r\n\r\n    // this.useMockData();\r\n    this.useRealData();\r\n\r\n    this.messageFormControl = new FormControl();\r\n    this.toUserControl = new FormControl();\r\n    this.extraMessageUserControl = new FormControl();\r\n\r\n    combineLatest([\r\n      this.messageFormControl.valueChanges,\r\n      this.toUserControl.valueChanges\r\n    ]).subscribe(([message, toId]) => {\r\n      this.isFormValid = !!message && !!toId;\r\n    });\r\n\r\n    this.socket.on('roomClosed', () => {\r\n      this.roomClosed = true;\r\n    });\r\n  }\r\n\r\n  disapprove(message: Message) {\r\n    if (message.type === 'playerMessage') {\r\n      this.messageService.hostDisapprovePlayerMessage({...message, approvalStatus: 'disapproved'});\r\n    } else {\r\n      this.messageService.disapproveAttemptToJoin({...message, approvalStatus: 'disapproved'});\r\n    }\r\n  }\r\n\r\n  approve(message: Message) {\r\n    if (message.type === 'playerMessage') {\r\n      this.messageService.hostApprovePlayerMessage({...message, approvalStatus: 'approved'});\r\n    } else {\r\n      this.messageService.approveAttemptToJoin({...message, approvalStatus: 'approved'});\r\n    }\r\n  }\r\n\r\n  publish() {\r\n    this.messageService.hostPublishAllMessages();\r\n  }\r\n\r\n  edit(message) {\r\n    this.messageFormControl.setValue(message.content);\r\n    this.toUserControl.setValue(message.toName);\r\n    this.disapprovedMessageId = message.id;\r\n    // this.socketService.canSendPlayerMessage$.next(true);\r\n  }\r\n\r\n\r\n  sendMessage() {\r\n    const toUser = this.usersInRoom.find(u => u.username === this.toUserControl.value);\r\n\r\n    const message: Message = {\r\n      id: this.disapprovedMessageId || uuidv4(),\r\n\r\n      fromName: this.user.username,\r\n      toName: toUser.username,\r\n\r\n      content: this.messageFormControl.value.trim(),\r\n      timestamp: new Date().valueOf(),\r\n      published: false,\r\n      approvalStatus: 'pending',\r\n      type: 'playerMessage',\r\n      roundIndex: this.currentRound\r\n    };\r\n\r\n    this.messageService.playerSendMessageToHost(message);\r\n    this.socketService.canSendPlayerMessage$.next(false);\r\n    this.messageFormControl.reset();\r\n    this.toUserControl.reset();\r\n    this.disapprovedMessageId = undefined;\r\n  }\r\n\r\n  startNewRound() {\r\n    this.messageService.startNewRound();\r\n  }\r\n\r\n  endCurrentRound() {\r\n    this.messageService.endCurrentRound();\r\n  }\r\n\r\n  trackByFn(index: number, item): number {\r\n    return item.id;\r\n  }\r\n\r\n  checkOnline() {\r\n    this.socketService.socket.emit('sendAlert', ({message: '检查在线'}));\r\n  }\r\n\r\n  closeRoom() {\r\n    this.socketService.socket.emit('closeRoom');\r\n  }\r\n\r\n  messageStatusDisplay(messageStatus: string) {\r\n    switch (messageStatus) {\r\n      case 'notStarted':\r\n        return '未开始';\r\n      case 'waiting':\r\n        return '未发送';\r\n      case 'sent':\r\n        return '待审核';\r\n      case 'approved':\r\n        return '已通过';\r\n      case 'disapproved':\r\n        return '已拒绝';\r\n\r\n    }\r\n  }\r\n\r\n  giveExtraMessage() {\r\n    this.socketService.socket.emit('extraMessage', {\r\n      username: this.extraMessageUserControl.value,\r\n      roomNumber: this.roomNumber\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"user-list\" *ngIf=\"user.userRole === 'host'\">\r\n    <b>玩家列表</b>\r\n    <div class=\"table-container\">\r\n      <table mat-table [dataSource]=\"playersInRoom\">\r\n\r\n        <!--- Note that these columns can be defined in any order.\r\n              The actual rendered columns are set as a property on the row definition\" -->\r\n\r\n        <ng-container matColumnDef=\"username\">\r\n          <th mat-header-cell *matHeaderCellDef> 玩家名</th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.username}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"connected\">\r\n          <th mat-header-cell *matHeaderCellDef> 连接状态</th>\r\n          <td mat-cell *matCellDef=\"let element\">\r\n            <div *ngIf=\"element.connected\">\r\n              <mat-icon style=\"color: green\">link</mat-icon>\r\n            </div>\r\n\r\n            <div *ngIf=\"!element.connected\">\r\n              <mat-icon style=\"color: red\">link_off</mat-icon>\r\n            </div>\r\n          </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"messageStatus\">\r\n          <th mat-header-cell *matHeaderCellDef> 消息状态</th>\r\n          <td mat-cell *matCellDef=\"let element\">\r\n            {{messageStatusDisplay(element.messageStatus)}}\r\n          </td>\r\n        </ng-container>\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"playerDisplayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: playerDisplayedColumns;\"></tr>\r\n      </table>\r\n    </div>\r\n    <b>观众列表</b>\r\n    <div class=\"table-container\">\r\n      <table mat-table [dataSource]=\"observersInRoom\">\r\n\r\n        <!--- Note that these columns can be defined in any order.\r\n              The actual rendered columns are set as a property on the row definition\" -->\r\n\r\n        <ng-container matColumnDef=\"username\">\r\n          <th mat-header-cell *matHeaderCellDef> 观众名</th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.username}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"connected\">\r\n          <th mat-header-cell *matHeaderCellDef> 连接状态</th>\r\n          <td mat-cell *matCellDef=\"let element\">\r\n            <div *ngIf=\"element.connected\">\r\n              <mat-icon style=\"color: green\">link</mat-icon>\r\n            </div>\r\n\r\n            <div *ngIf=\"!element.connected\">\r\n              <mat-icon style=\"color: red\">link_off</mat-icon>\r\n            </div>\r\n          </td>\r\n        </ng-container>\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"observersDisplayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: observersDisplayedColumns;\"></tr>\r\n      </table>\r\n    </div>\r\n\r\n    <div class=\"extra-message\">\r\n      <mat-form-field>\r\n        <mat-label>获得额外短信机会</mat-label>\r\n        <mat-select [formControl]=\"extraMessageUserControl\">\r\n          <mat-option *ngFor=\"let user of playersInRoom\" [value]=\"user.username\">\r\n            {{user.username}}\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n\r\n      <button mat-raised-button color=\"primary\" [disabled]=\"!extraMessageUserControl.value\"\r\n              (click)=\"giveExtraMessage()\">\r\n        额外短信\r\n      </button>\r\n    </div>\r\n\r\n  </div>\r\n  <div class=\"wrapper\">\r\n    <div class=\"header\">\r\n      <div class=\"title\">\r\n        {{userRoleDisplay}}{{user.userRole === 'host' ? '主持人' : user.username}}，欢迎来到心动的信号\r\n      </div>\r\n      <div class=\"room-status\">\r\n        <div>\r\n          房间名：{{roomNumber}}\r\n          <span *ngIf=\"roomClosed\" style=\"color: red;margin-left: 10px;font-weight: bold;\">游戏已结束</span>\r\n        </div>\r\n\r\n      </div>\r\n      <div class=\"room-status\">\r\n        <span *ngIf=\"currentRound > 0\">当前是第 {{currentRound}} 轮短信</span>\r\n        <span *ngIf=\"currentRound === 0\">尚未开始短信轮次</span>\r\n      </div>\r\n      <div class=\"room-status\">\r\n        <span style=\"min-height: 18px\">{{canSendPlayerMessage ? '玩家们正在发送短信...' : ' '}}</span>\r\n      </div>\r\n      <div class=\"menu\" *ngIf=\"user.userRole === 'host'\">\r\n        <button mat-icon-button color=\"accent\" [matMenuTriggerFor]=\"menu\">\r\n          <mat-icon>menu</mat-icon>\r\n        </button>\r\n\r\n        <mat-menu #menu=\"matMenu\">\r\n          <button mat-menu-item (click)=\"checkOnline()\">\r\n            <mat-icon color=\"primary\">online_prediction</mat-icon>\r\n            检查在线\r\n          </button>\r\n\r\n          <mat-divider></mat-divider>\r\n          <button mat-menu-item (click)=\"closeRoom()\">\r\n            <mat-icon color=\"warn\">close</mat-icon>\r\n            关闭房间并结束游戏\r\n          </button>\r\n        </mat-menu>\r\n      </div>\r\n    </div>\r\n\r\n    <!--  短信列表  -->\r\n    <div class=\"msg-list\">\r\n      <cdk-virtual-scroll-viewport #scrollViewport itemSize=\"1\" class=\"example-viewport\">\r\n        <ng-container *cdkVirtualFor=\"let message of messages;\r\n                           let index = index;\r\n                           let count = count;\r\n                           let first = first;\r\n                           let last = last;\r\n                           let even = even;\r\n                           let odd = odd;\r\n                           trackBy: trackByFn\r\n                           \">\r\n\r\n          <ng-container\r\n            *ngIf=\"user.userRole!=='host' && !first && message.roundIndex !== messages[index - 1]?.roundIndex\">\r\n            <div class=\"divider-text\">第 {{messages[index - 1]?.roundIndex}} 轮短信结束</div>\r\n            <mat-divider></mat-divider>\r\n            <div class=\"divider-text\">第 {{message.roundIndex}} 轮短信开始</div>\r\n          </ng-container>\r\n\r\n\r\n          <div class=\"item-container\"\r\n               [ngClass]=\"{'sent-message': message.fromName===user.username,'to-me-message': message.toName===user.username}\">\r\n\r\n            <mat-card class=\"message mat-elevation-z5\" [ngClass]=\"{'system-message': message.type === 'systemMessage'}\">\r\n              <mat-card-header>\r\n                <mat-card-title>\r\n                  <mat-icon style=\"color: green\"\r\n                            *ngIf=\"user.username===message.fromName && message.approvalStatus === 'approved'\">\r\n                    check\r\n                  </mat-icon>\r\n                  <mat-icon color=\"warn\"\r\n                            *ngIf=\"user.username===message.fromName && message.approvalStatus === 'disapproved'\">\r\n                    warning\r\n                  </mat-icon>\r\n\r\n                  <ng-container *ngIf=\"message.type === 'playerMessage'\">\r\n                    <span *ngIf=\"message.toName === user.username\">收到的消息</span>\r\n\r\n                    <span *ngIf=\"message.fromName === user.username\">我发给 {{message.toName}} 的消息</span>\r\n\r\n                    <span *ngIf=\"user.userRole !== 'player'\">{{message.fromName}} 发给 {{message.toName}}</span>\r\n                  </ng-container>\r\n\r\n                  <ng-container *ngIf=\"message.type === 'systemMessage'\">\r\n                    <span>系统消息</span>\r\n                  </ng-container>\r\n\r\n                </mat-card-title>\r\n                <mat-card-subtitle *ngIf=\"message.type === 'playerMessage'\">\r\n                  <span>消息轮次： {{message.roundIndex}}</span>\r\n                </mat-card-subtitle>\r\n              </mat-card-header>\r\n\r\n              <mat-card-content class=\"content\">\r\n                <p>\r\n                  {{message.content}}\r\n                </p>\r\n              </mat-card-content>\r\n\r\n              <mat-card-actions class=\"host-action\">\r\n                <button mat-raised-button color=\"primary\"\r\n                        *ngIf=\"user.userRole==='host' && message.approvalStatus ==='pending'\"\r\n                        (click)=\"approve(message)\">\r\n                  批准\r\n                </button>\r\n                <button mat-raised-button color=\"warn\"\r\n                        *ngIf=\"user.userRole==='host' && message.approvalStatus ==='pending'\"\r\n                        (click)=\"disapprove(message)\">\r\n                  拒绝\r\n                </button>\r\n\r\n                <button mat-raised-button\r\n                        [disabled]=\"true\"\r\n                        *ngIf=\"user.userRole==='host' && message.approvalStatus ==='approved'\">\r\n                  已批准\r\n                </button>\r\n\r\n                <button mat-raised-button\r\n                        [disabled]=\"true\"\r\n                        *ngIf=\"user.userRole==='host' && message.approvalStatus ==='disapproved'\">\r\n                  已拒绝\r\n                </button>\r\n\r\n                <button mat-raised-button color=\"primary\"\r\n                        [disabled]=\"!canSendPlayerMessage\"\r\n                        *ngIf=\"user.username===message.fromName && message.approvalStatus === 'disapproved'\"\r\n                        (click)=\"edit(message)\">重新编辑\r\n                </button>\r\n              </mat-card-actions>\r\n            </mat-card>\r\n\r\n          </div>\r\n        </ng-container>\r\n\r\n      </cdk-virtual-scroll-viewport>\r\n    </div>\r\n\r\n    <!-- 发送消息 -->\r\n    <div class=\"footer\">\r\n      <ng-container *ngIf=\"user.userRole==='player'\">\r\n        <mat-form-field>\r\n          <mat-label>发送对象</mat-label>\r\n          <mat-select [formControl]=\"toUserControl\">\r\n            <mat-option *ngFor=\"let user of otherPlayers\" [value]=\"user.username\">\r\n              {{user.username}}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"amount\" appearance=\"outline\">\r\n          <mat-label>消息</mat-label>\r\n          <textarea matInput [formControl]=\"messageFormControl\" rows=\"3\"></textarea>\r\n          <button class=\"send-button\" mat-raised-button matSuffix mat-icon-button color=\"primary\"\r\n                  [disabled]=\"!isFormValid || !canSendPlayerMessage\"\r\n                  *ngIf=\"user.userRole==='player'\" (click)=\"sendMessage()\"\r\n          >\r\n            <mat-icon>send</mat-icon>\r\n          </button>\r\n        </mat-form-field>\r\n      </ng-container>\r\n\r\n      <div class=\"footer-actions\" *ngIf=\"user.userRole==='host'\">\r\n        <button mat-raised-button color=\"accent\" [disabled]=\"canSendPlayerMessage\" (click)=\"publish()\">\r\n          公布消息\r\n        </button>\r\n\r\n        <button mat-raised-button color=\"primary\" *ngIf=\"!canSendPlayerMessage\" (click)=\"startNewRound()\">\r\n          开始下一轮短信\r\n        </button>\r\n        <button mat-raised-button color=\"warn\" [disabled]=\"hasPendingApprovalMessage\" *ngIf=\"canSendPlayerMessage\"\r\n                (click)=\"endCurrentRound()\">\r\n          结束当前轮次\r\n        </button>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n\r\n</div>\r\n\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {SocketService} from '../../services/socket.service';\r\nimport {MatDialog} from \"@angular/material/dialog\";\r\nimport {ReadMeComponent} from \"../read-me/read-me.component\";\r\nimport {getUserFromLocalStorage} from \"../../shared/utils\";\r\n\r\n@Component({\r\n  selector: 'app-landing',\r\n  templateUrl: './landing.component.html',\r\n  styleUrls: ['./landing.component.scss']\r\n})\r\nexport class LandingComponent implements OnInit {\r\n  title = 'heart-signal-client';\r\n\r\n  form: FormGroup;\r\n  loading = false;\r\n\r\n  userTypes = [\r\n    {value: 'player', display: '玩家'},\r\n    {value: 'observer', display: '观众'},\r\n    {value: 'host', display: '主持人'},\r\n  ];\r\n\r\n  isHost: boolean;\r\n  isPlayer: boolean;\r\n  isObserver: boolean;\r\n\r\n  constructor(\r\n    private socketService: SocketService,\r\n    private formBuilder: FormBuilder,\r\n    private dialog: MatDialog,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    const hasReadNotice = localStorage.getItem('hasReadNotice');\r\n\r\n    if (!hasReadNotice) {\r\n      this.dialog.open(ReadMeComponent, {\r\n        disableClose: true,\r\n      })\r\n    }\r\n\r\n    this.form = this.formBuilder.group({\r\n      username: new FormControl('', Validators.required),\r\n      roomNumber: new FormControl('', Validators.required),\r\n      userRole: new FormControl('', Validators.required)\r\n    });\r\n\r\n    const localStorageUser = getUserFromLocalStorage();\r\n\r\n    if (!!localStorageUser) {\r\n\r\n      this.isHost = localStorageUser.userRole === 'host';\r\n      this.isPlayer = localStorageUser.userRole === 'player';\r\n      this.isObserver = localStorageUser.userRole === 'observer';\r\n\r\n      this.form.get('username').setValue(localStorageUser.username)\r\n      this.form.get('userRole').setValue(localStorageUser.userRole)\r\n      this.form.get('roomNumber').setValue(localStorageUser.roomNumber)\r\n    }\r\n\r\n    this.form.get('userRole').valueChanges.subscribe(selectedRole => {\r\n      this.isHost = selectedRole === 'host';\r\n      this.isPlayer = selectedRole === 'player';\r\n      this.isObserver = selectedRole === 'observer';\r\n\r\n      if (!this.isHost) {\r\n        this.form.get('username').reset();\r\n      } else {\r\n        this.form.get('username').setValue('other player');\r\n      }\r\n    });\r\n\r\n    this.socketService.socket.on('approveAttemptToJoin', () => {\r\n      this.loading = false;\r\n    });\r\n\r\n    this.socketService.socket.on('alert', () => {\r\n      this.loading = false;\r\n    });\r\n\r\n    this.socketService.socket.on('disapproveAttemptToJoin', () => {\r\n      this.loading = false;\r\n    });\r\n  }\r\n\r\n  joinRoom() {\r\n    this.loading = true;\r\n    this.socketService.attemptToJoin({\r\n      username: this.formValue.username.trim(),\r\n      userRole: this.formValue.userRole,\r\n      roomNumber: this.formValue.roomNumber.trim(),\r\n    });\r\n  }\r\n\r\n  createRoom() {\r\n    this.socketService.createRoom({\r\n      username: this.formValue.username.trim(),\r\n      roomNumber: this.formValue.roomNumber.trim(),\r\n    });\r\n  }\r\n\r\n  get formValue() {\r\n    return this.form.value;\r\n  }\r\n\r\n}\r\n","<div class=\"wrapper\">\r\n  <mat-card>\r\n    <mat-card-header>\r\n      <mat-card-title>\r\n        欢迎来到心动的信号\r\n      </mat-card-title>\r\n\r\n      <mat-card-subtitle>\r\n        <span>Made with ❤️ by 折白</span>\r\n      </mat-card-subtitle>\r\n\r\n      <mat-card-subtitle>\r\n        <span>Coded with ☕️ by&nbsp;<a href=\"https://github.com/tian-li/heart-signal-client\" target=\"_blank\"> BoBoTea</a></span>\r\n      </mat-card-subtitle>\r\n    </mat-card-header>\r\n\r\n    <mat-card-content>\r\n      <form [formGroup]=\"form\">\r\n        <mat-form-field>\r\n          <mat-label>房间名</mat-label>\r\n          <input matInput formControlName=\"roomNumber\">\r\n          <mat-error *ngIf=\"form.controls['roomNumber'].hasError('required')\">必填</mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field>\r\n          <mat-label>加入身份</mat-label>\r\n          <mat-select formControlName=\"userRole\">\r\n            <mat-option *ngFor=\"let userRole of userTypes\" [value]=\"userRole.value\">\r\n              {{userRole.display}}\r\n            </mat-option>\r\n          </mat-select>\r\n          <mat-error *ngIf=\"form.controls['userRole'].hasError('required')\">必填</mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field *ngIf=\"isPlayer || isObserver\">\r\n          <mat-label>名称（请使用微信昵称）</mat-label>\r\n          <input matInput formControlName=\"username\">\r\n          <mat-error *ngIf=\"form.controls['username'].hasError('required')\">必填</mat-error>\r\n        </mat-form-field>\r\n      </form>\r\n    </mat-card-content>\r\n\r\n    <mat-card-actions>\r\n      <button mat-raised-button color=\"primary\" *ngIf=\"!isHost\"\r\n              [disabled]=\"form.invalid || loading\" (click)=\"joinRoom()\">\r\n        {{loading ? '请稍候...' : '加入房间'}}\r\n        <mat-progress-bar *ngIf=\"loading\" mode=\"indeterminate\"></mat-progress-bar>\r\n      </button>\r\n      <button mat-raised-button color=\"primary\" *ngIf=\"isHost\" [disabled]=\"form.invalid\" (click)=\"createRoom()\">\r\n        创建房间\r\n      </button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n</div>\r\n","import {Injectable} from '@angular/core';\r\nimport * as socketIo from 'socket.io-client';\r\nimport {User} from '../shared/user';\r\nimport {Router} from '@angular/router';\r\nimport {BehaviorSubject} from 'rxjs';\r\nimport {MatSnackBar} from '@angular/material/snack-bar';\r\nimport {environment} from '../../environments/environment';\r\nimport {clearLocalUser, getUserFromLocalStorage, saveUserToLocalStorage} from '../shared/utils';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SocketService {\r\n\r\n  socket: socketIo.Socket;\r\n  user: User;\r\n  private _roomNumber: string;\r\n  private _usersInRoom: User[] = [];\r\n\r\n  currentRound$: BehaviorSubject<number> = new BehaviorSubject<number>(0);\r\n  canSendPlayerMessage$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n\r\n  usersInRoom$: BehaviorSubject<User[]> = new BehaviorSubject([]);\r\n\r\n  constructor(private router: Router,\r\n              private snackBar: MatSnackBar) {\r\n    this.setupSocketConnection();\r\n\r\n    const localStorageUser = getUserFromLocalStorage();\r\n\r\n    if (!!localStorageUser) {\r\n      this.autoJoin({...localStorageUser});\r\n    }\r\n\r\n    this.socket.on('roomClosed', () => {\r\n      this.socket.disconnect();\r\n      clearLocalUser();\r\n    });\r\n\r\n    this.socket.on('extraMessage', () => {\r\n      this.canSendPlayerMessage$.next(true);\r\n    });\r\n\r\n    this.socket.on('alert', (error) => {\r\n      this.snackBar.open(\r\n        error.message,\r\n        '好的',\r\n        {\r\n          duration: 2000,\r\n        }\r\n      );\r\n    });\r\n\r\n    this.socket.on('approveAttemptToJoin', (user) => {\r\n      this.joinRoom(user);\r\n    });\r\n\r\n    this.socket.on('disapproveAttemptToJoin', () => {\r\n      this.snackBar.open(\r\n        '主持人拒绝了你的加入请求',\r\n        '好的',\r\n        {\r\n          duration: 2000,\r\n        }\r\n      );\r\n    });\r\n\r\n    this.socket.on('joinSuccess', ({user, roomInfo}) => {\r\n      this.user = user;\r\n      this.setRoomNumber(user.roomNumber);\r\n      this.router.navigate(['./room']);\r\n\r\n      saveUserToLocalStorage(user);\r\n\r\n      if (!!roomInfo) {\r\n        this.currentRound$.next(roomInfo.roundIndex);\r\n        this.canSendPlayerMessage$.next(roomInfo.isSendingMessage);\r\n      }\r\n    });\r\n\r\n    this.socket.on('listUserInRoom', ({roomNumber, users}) => {\r\n      this.updateUsersInRoom(users);\r\n    });\r\n\r\n    // 短信轮次\r\n    this.socket.on('startNewRound', (roundIndex) => {\r\n      this.currentRound$.next(roundIndex);\r\n      this.canSendPlayerMessage$.next(true);\r\n    });\r\n\r\n    this.socket.on('endCurrentRound', () => {\r\n      this.canSendPlayerMessage$.next(false);\r\n    });\r\n  }\r\n\r\n  addUserToRoom(user: User) {\r\n    this._usersInRoom.push(user);\r\n    this.usersInRoom$.next(this._usersInRoom);\r\n  }\r\n\r\n  updateUsersInRoom(users: User[]) {\r\n    this._usersInRoom = users;\r\n    this.usersInRoom$.next(this._usersInRoom);\r\n  }\r\n\r\n  joinRoom(user: { userRole: string, roomNumber: string, username?: string }) {\r\n    this.socket.emit('join', user);\r\n  }\r\n\r\n  autoJoin(user: { userRole: string, roomNumber: string, username?: string }) {\r\n    if (user.userRole === 'host') {\r\n      this.socket.emit('reconnectHost', user);\r\n    } else {\r\n      this.socket.emit('autoJoin', user);\r\n    }\r\n  }\r\n\r\n  attemptToJoin(user: { userRole: string, roomNumber: string, username?: string }) {\r\n    this.socket.emit('attemptToJoin', {\r\n      id: this.socket.id,\r\n      ...user\r\n    });\r\n\r\n    this.snackBar.open(\r\n      '等待主持人批准',\r\n      '好的',\r\n      {\r\n        duration: 2000,\r\n      }\r\n    );\r\n  }\r\n\r\n  createRoom({username, roomNumber}) {\r\n    this.socket.emit('create', {\r\n      username,\r\n      roomNumber\r\n    });\r\n  }\r\n\r\n  setRoomNumber(roomNumber: string) {\r\n    this._roomNumber = roomNumber;\r\n  }\r\n\r\n  getRoomNumber(): string {\r\n    return this._roomNumber;\r\n  }\r\n\r\n  setupSocketConnection() {\r\n\r\n    if (environment.production) {\r\n      this.socket = socketIo.io();\r\n    } else {\r\n      this.socket = socketIo.io('http://192.168.56.1:3000', {\r\n        transports: ['websocket']\r\n      });\r\n    }\r\n  }\r\n}\r\n","import {createFeatureSelector, createSelector} from '@ngrx/store';\r\nimport {RootState} from '../index';\r\nimport * as fromMessage from './message.reducers';\r\nimport {Message} from '../../shared/message';\r\n\r\nconst selectMessageState = createFeatureSelector<RootState, fromMessage.State>(\r\n  fromMessage.messageFeatureKey\r\n);\r\n\r\nexport const selectSelectedMessageId = createSelector(\r\n  selectMessageState,\r\n  fromMessage.getSelectedMessageId\r\n);\r\n\r\nexport const {\r\n  selectIds: selectMessageIds,\r\n  selectEntities: selectMessageEntities,\r\n  selectAll: selectAllMessages,\r\n  selectTotal: selectMessageTotal,\r\n} = fromMessage.adapter.getSelectors(selectMessageState);\r\n\r\nexport const selectAllMessagesByTime = createSelector(\r\n  selectAllMessages,\r\n  (messages: Message[]) => {\r\n    return messages.sort((a, b) => a.timestamp - b.timestamp);\r\n  }\r\n);\r\n","import * as dayjs from 'dayjs';\r\n\r\n\r\nexport function saveUserToLocalStorage({username, userRole, roomNumber}) {\r\n\r\n  const expireDate = dayjs().add(1, 'd').valueOf();\r\n\r\n  localStorage.setItem('username', JSON.stringify({value: username, expireDate}));\r\n  localStorage.setItem('roomNumber', JSON.stringify({value: roomNumber, expireDate}));\r\n  localStorage.setItem('userRole', JSON.stringify({value: userRole, expireDate}));\r\n}\r\n\r\nexport function getUserFromLocalStorage() {\r\n  const now = dayjs();\r\n  const prevUsernameInfo = localStorage.getItem('username');\r\n  const prevUserRoleInfo = localStorage.getItem('userRole');\r\n  const prevRoomNumberInfo = localStorage.getItem('roomNumber');\r\n\r\n  if (!!prevUsernameInfo && !!prevUserRoleInfo && !!prevRoomNumberInfo) {\r\n    const username = extractValue(JSON.parse(prevUsernameInfo), now);\r\n    const userRole = extractValue(JSON.parse(prevUserRoleInfo), now);\r\n    const roomNumber = extractValue(JSON.parse(prevRoomNumberInfo), now);\r\n\r\n    if (!!username && !!userRole && !!roomNumber) {\r\n      return {\r\n        username,\r\n        userRole,\r\n        roomNumber\r\n      }\r\n    }\r\n  }\r\n\r\n  return null;\r\n\r\n}\r\n\r\nexport function clearLocalUser() {\r\n  localStorage.removeItem('username');\r\n  localStorage.removeItem('userRole');\r\n  localStorage.removeItem('roomNumber');\r\n}\r\n\r\nfunction extractValue({value, expireDate}, now) {\r\n\r\n  if (dayjs(expireDate).isAfter(now)) {\r\n    return value\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  socketEndpoint: 'http://localhost:3000/socket'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {createEntityAdapter, EntityAdapter, EntityState, Update} from '@ngrx/entity';\r\nimport {Action, createReducer, on} from '@ngrx/store';\r\nimport {\r\n  listPreviousMessages,\r\n  playerMessageApprovedByHostCommand,\r\n  playerMessageApprovedByHostEvent,\r\n  playerMessageCommand,\r\n  playerMessageDisapprovedByHostCommand,\r\n  playerMessageDisapprovedByHostEvent,\r\n  playerMessageEvent,\r\n  publishPendingMessagesEvent,\r\n  systemMessageApprovedByHostCommand,\r\n  systemMessagedEvent,\r\n} from './message.actions';\r\nimport {Message} from '../../shared/message';\r\n\r\nexport const messageFeatureKey = 'message';\r\n\r\nexport interface State extends EntityState<Message> {\r\n  selectedMessageId: number;\r\n}\r\n\r\nexport const adapter: EntityAdapter<Message> = createEntityAdapter<Message>({\r\n  selectId: (message: Message) => message.id,\r\n  sortComparer: false,\r\n});\r\n\r\nexport const initialState: State = adapter.getInitialState({\r\n  selectedMessageId: null,\r\n});\r\n\r\nconst reducer = createReducer(\r\n  initialState,\r\n  on(listPreviousMessages, (state, {messages}) => {\r\n    return adapter.setAll(messages, state);\r\n  }),\r\n  on(playerMessageCommand, playerMessageEvent, (state, {payload}) => {\r\n    return adapter.upsertOne(payload, state);\r\n  }),\r\n  on(\r\n    playerMessageApprovedByHostCommand,\r\n    playerMessageApprovedByHostEvent,\r\n    (state, {payload}) => {\r\n      const updates: Update<Message> = {\r\n        id: payload.id,\r\n        changes: {...payload, approvalStatus: 'approved', published: false}\r\n      };\r\n\r\n      return adapter.updateOne(updates, state);\r\n    }),\r\n\r\n  on(playerMessageDisapprovedByHostCommand, playerMessageDisapprovedByHostEvent, (state, {payload}) => {\r\n    const updates: Update<Message> = {\r\n      id: payload.id,\r\n      changes: {...payload, approvalStatus: 'disapproved', published: false}\r\n    };\r\n\r\n    return adapter.updateOne(updates, state);\r\n  }),\r\n\r\n  on(publishPendingMessagesEvent, (state, {payload}) => {\r\n    return adapter.upsertMany(payload, state);\r\n  }),\r\n\r\n  on(systemMessagedEvent, (state, {payload}) => {\r\n    return adapter.upsertOne(payload, state);\r\n  }),\r\n\r\n  on(systemMessageApprovedByHostCommand,\r\n    (state, {payload}) => {\r\n      const updates: Update<Message> = {\r\n        id: payload.id,\r\n        changes: {...payload, approvalStatus: 'approved'}\r\n      };\r\n\r\n      return adapter.updateOne(updates, state);\r\n    }),\r\n);\r\n\r\nexport function messageReducer(\r\n  state: State | undefined,\r\n  action: Action\r\n): State {\r\n  return reducer(state, action);\r\n}\r\n\r\nexport const getSelectedMessageId = (state: State) => state.selectedMessageId;\r\n\r\n","import {Component, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-read-me',\r\n  templateUrl: './read-me.component.html',\r\n  styleUrls: ['./read-me.component.scss']\r\n})\r\nexport class ReadMeComponent implements OnInit {\r\n  canClose = false;\r\n  countDown = 10;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    const interval = setInterval(() => {\r\n      this.countDown--;\r\n    }, 1000);\r\n\r\n    setTimeout(() => {\r\n      this.canClose = true;\r\n      clearInterval(interval);\r\n    }, this.countDown * 1000);\r\n  }\r\n\r\n  ok() {\r\n    localStorage.setItem('hasReadNotice', 'true');\r\n  }\r\n}\r\n","<h1 mat-dialog-title>游戏须知</h1>\r\n<mat-dialog-content class=\"mat-typography\">\r\n  <p>\r\n    此网站只是一个为本密室开发的简易工具，请<b>按照主持人指示</b>进行操作。否则游戏将无法正常进行。\r\n  </p>\r\n\r\n\r\n\r\n  <mat-divider></mat-divider>\r\n\r\n  <p>游戏过程中，如果和此网站断开了链接，直接刷新即可</p>\r\n\r\n\r\n</mat-dialog-content>\r\n<mat-dialog-actions align=\"end\">\r\n  <button mat-raised-button mat-dialog-close color=\"primary\"\r\n          (click)=\"ok()\"\r\n          [disabled]=\"!canClose\">\r\n    {{canClose ? '好的' : countDown + '秒'}}\r\n  </button>\r\n</mat-dialog-actions>\r\n","import {Component} from '@angular/core';\r\nimport {SocketService} from \"./services/socket.service\";\r\nimport {getUserFromLocalStorage} from \"./shared/utils\";\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n\r\n  constructor(private socketService: SocketService) {\r\n  }\r\n\r\nngOnInit() {\r\n  // const prevUsername = localStorage.getItem('username');\r\n  // const prevUserRole = localStorage.getItem('userRole');\r\n  // const prevRoomNumber = localStorage.getItem('roomNumber');\r\n  //\r\n  // if(!!prevUsername&&!!prevUserRole&&!!prevRoomNumber) {\r\n  //   this.socketService.joinRoom({\r\n  //     username: prevUsername,\r\n  //     userRole: prevUserRole,\r\n  //     roomNumber: prevRoomNumber\r\n  //   });\r\n  // }\r\n\r\n\r\n  // const localStorageUser = getUserFromLocalStorage();\r\n  //\r\n  // if(!!localStorageUser) {\r\n  //   this.socketService.autoJoin({...localStorageUser});\r\n  // }\r\n}\r\n}\r\n","<router-outlet></router-outlet>\n","import {createAction, props} from '@ngrx/store';\r\nimport {PlayerMessage} from '../../shared/player-message';\r\nimport {SystemMessage} from '../../shared/system-message';\r\nimport {Message} from '../../shared/message';\r\n// import {socketMessageEvents} from '../../shared/constants';\r\n\r\nexport const listPreviousMessages = createAction(\r\n  '[Message] List Previous Messages',\r\n  props<{messages: Message[]}>())\r\n\r\nexport const playerMessageCommand = createAction('[Message] Player Message Command', props<{\r\n  payload: PlayerMessage,\r\n}>());\r\n\r\nexport const playerMessageEvent = createAction('[Message] Player Message Event', props<{\r\n  payload: PlayerMessage,\r\n}>());\r\n\r\nexport const playerMessageApprovedByHostCommand = createAction('[Message] playerMessageApprovedByHostCommand', props<{\r\n  payload: PlayerMessage,\r\n}>());\r\n\r\nexport const playerMessageApprovedByHostEvent = createAction('[Message] playerMessageApprovedByHostEvent', props<{\r\n  payload: PlayerMessage,\r\n}>());\r\n\r\nexport const playerMessageDisapprovedByHostCommand = createAction('[Message] playerMessageDisapprovedByHostCommand', props<{\r\n  payload: PlayerMessage,\r\n}>());\r\n\r\nexport const playerMessageDisapprovedByHostEvent = createAction('[Message] playerMessageDisapprovedByHostEvent', props<{\r\n  payload: PlayerMessage,\r\n}>());\r\n\r\nexport const publishPendingMessagesCommand = createAction('[Message] publishPendingMessagesCommand', props<{\r\n  payload: PlayerMessage,\r\n}>());\r\n\r\nexport const publishPendingMessagesEvent = createAction('[Message] publishPendingMessagesEvent', props<{\r\n  payload: PlayerMessage[],\r\n}>());\r\n\r\nexport const systemMessagedEvent = createAction('[Message] System Message Event', props<{ payload: SystemMessage }>());\r\n\r\nexport const systemMessageApprovedByHostCommand = createAction('[Message] systemMessageApprovedByHostCommand', props<{\r\n  payload: SystemMessage,\r\n}>());\r\n\r\nexport const systemMessageApprovedByHostEvent = createAction('[Message] systemMessageApprovedByHostEvent', props<{\r\n  payload: SystemMessage,\r\n}>());\r\n\r\nexport const systemMessageDisapprovedByHostCommand = createAction('[Message] systemMessageDisapprovedByHostCommand', props<{\r\n  payload: SystemMessage,\r\n}>());\r\n\r\nexport const systemMessageDisapprovedByHostEvent = createAction('[Message] systemMessageDisapprovedByHostEvent', props<{\r\n  payload: SystemMessage,\r\n}>());\r\n","import {InjectionToken} from '@angular/core';\r\nimport * as fromMessage from './message';\r\nimport {Action, ActionReducer, ActionReducerMap, MetaReducer,} from '@ngrx/store';\r\nimport {environment} from '../../environments/environment';\r\n\r\nexport {\r\n  fromMessage,\r\n};\r\n\r\nexport interface RootState {\r\n  [fromMessage.messageFeatureKey]: fromMessage.State;\r\n}\r\n\r\nexport const ROOT_REDUCERS = new InjectionToken<ActionReducerMap<RootState, Action>>('Root reducers token', {\r\n  factory: () => ({\r\n    [fromMessage.messageFeatureKey]: fromMessage.messageReducer,\r\n  }),\r\n});\r\n\r\nexport function logger(reducer: ActionReducer<RootState>): ActionReducer<RootState> {\r\n  return (state, action) => {\r\n    const result = reducer(state, action);\r\n    console.groupCollapsed(action.type);\r\n    // console.log('prev state', state);\r\n    // console.log('action', action);\r\n    // console.log('next state', result);\r\n    console.groupEnd();\r\n\r\n    return result;\r\n  };\r\n}\r\n\r\nexport const metaReducers: MetaReducer<RootState>[] = !environment.production\r\n  ? [logger]\r\n  : [];\r\n","import {BrowserModule} from '@angular/platform-browser';\r\nimport {NgModule} from '@angular/core';\r\n\r\nimport {AppComponent} from './app.component';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {RoomComponent} from './components/room/room.component';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {ReactiveFormsModule} from '@angular/forms';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {LandingComponent} from './components/landing/landing.component';\r\nimport {AppRoutingModule} from './app-routing.module';\r\nimport {StoreModule} from '@ngrx/store';\r\nimport {ScrollingModule} from '@angular/cdk/scrolling';\r\nimport {ROOT_REDUCERS} from './store';\r\nimport {SocketService} from './services/socket.service';\r\nimport {MessageService} from './services/message.service';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport {ReadMeComponent} from './components/read-me/read-me.component';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    RoomComponent,\r\n    LandingComponent,\r\n    ReadMeComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    AppRoutingModule,\r\n    ReactiveFormsModule,\r\n\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatIconModule,\r\n    MatSnackBarModule,\r\n    MatDividerModule,\r\n    MatProgressBarModule,\r\n    DragDropModule,\r\n    MatTableModule,\r\n    MatMenuModule,\r\n\r\n    StoreModule.forRoot(ROOT_REDUCERS, {\r\n      runtimeChecks: {\r\n        // strictStateImmutability and strictActionImmutability are enabled by default\r\n        strictStateSerializability: true,\r\n        strictActionSerializability: true,\r\n        strictActionWithinNgZone: true,\r\n      }\r\n    }),\r\n    ScrollingModule,\r\n    MatDialogModule,\r\n  ],\r\n  providers: [SocketService, MessageService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","export * from './message.actions';\r\nexport * from './message.reducers';\r\nexport * from './message.selectors';\r\n","import {Injectable} from '@angular/core';\r\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\r\nimport {SocketService} from './socket.service';\r\nimport {of} from 'rxjs';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class RoomGuard implements CanActivate {\r\n  constructor(private socketService:SocketService, private router: Router) {\r\n  }\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot, state: RouterStateSnapshot,\r\n  ) {\r\n    if(!!this.socketService.user) {\r\n      return true;\r\n    } else {\r\n      return this.router.parseUrl('/landing');\r\n    }\r\n\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {SocketService} from './socket.service';\r\nimport {Store} from '@ngrx/store';\r\nimport {\r\n  listPreviousMessages,\r\n  playerMessageApprovedByHostCommand,\r\n  playerMessageApprovedByHostEvent,\r\n  playerMessageCommand,\r\n  playerMessageDisapprovedByHostCommand,\r\n  playerMessageDisapprovedByHostEvent,\r\n  playerMessageEvent,\r\n  publishPendingMessagesEvent,\r\n  systemMessageApprovedByHostCommand,\r\n  systemMessagedEvent\r\n} from '../store/message';\r\nimport {PlayerMessage} from '../shared/player-message';\r\nimport {SystemMessage} from '../shared/system-message';\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\r\n\r\n\r\n@Injectable()\r\nexport class MessageService {\r\n\r\n  constructor(\r\n    private socketService: SocketService,\r\n    private store: Store,\r\n    private snackBar: MatSnackBar\r\n  ) {\r\n    this.socketService.socket.on('listPreviousMessages', ({messages}) => {\r\n      this.store.dispatch(listPreviousMessages({messages}));\r\n    });\r\n\r\n    // 玩家短信\r\n    this.socketService.socket.on('playerMessage', (message) => {\r\n      this.store.dispatch(playerMessageEvent({payload: message}));\r\n    });\r\n\r\n    this.socketService.socket.on('playerMessageApprovedByHost', (message) => {\r\n      this.store.dispatch(playerMessageApprovedByHostEvent({payload: message}));\r\n    });\r\n\r\n    this.socketService.socket.on('playerMessageDisapprovedByHost', (message) => {\r\n      this.store.dispatch(playerMessageDisapprovedByHostEvent({payload: message}));\r\n      this.socketService.canSendPlayerMessage$.next(true);\r\n    });\r\n\r\n    this.socketService.socket.on('publishPendingMessages', (messages) => {\r\n\r\n      if (this.socketService.user.userRole === 'host') {\r\n        this.snackBar.open(\r\n          '已成功发布消息',\r\n          '好的',\r\n          {\r\n            duration: 2000,\r\n          }\r\n        );\r\n      }\r\n\r\n      this.store.dispatch(publishPendingMessagesEvent({payload: messages}));\r\n    });\r\n\r\n    // 有人要以玩家加入\r\n    this.socketService.socket.on('attemptToJoin', ({id, username, userRole, roomNumber}) => {\r\n      const role = userRole === 'player' ? '玩家' : '观众';\r\n      const message: SystemMessage = {\r\n        id: uuidv4(),\r\n        type: 'systemMessage',\r\n        content: `${username} 想要作为 ${role} 加入游戏`,\r\n        timestamp: new Date().valueOf(),\r\n        actionRequired: true,\r\n        approvalStatus: 'pending',\r\n        payload: {id, username, userRole, roomNumber}\r\n      };\r\n\r\n      this.store.dispatch(systemMessagedEvent({payload: message}));\r\n    });\r\n\r\n\r\n  }\r\n\r\n  startNewRound() {\r\n    this.socketService.socket.emit(\r\n      'startNewRound',\r\n      {roomNumber: this.socketService.getRoomNumber()}\r\n    );\r\n  }\r\n\r\n  endCurrentRound() {\r\n    this.socketService.socket.emit('endCurrentRound', {roomNumber: this.socketService.getRoomNumber()});\r\n  }\r\n\r\n  // 玩家消息\r\n  playerSendMessageToHost(message: PlayerMessage) {\r\n    this.socketService.socket.emit('playerMessage', {\r\n      message,\r\n      roomNumber: this.socketService.getRoomNumber(),\r\n    });\r\n    this.store.dispatch(playerMessageCommand({payload: message}));\r\n  }\r\n\r\n  hostApprovePlayerMessage(message: PlayerMessage) {\r\n    this.socketService.socket.emit('playerMessageApprovedByHost', {\r\n      message: {...message, approvalStatus: 'approved'},\r\n      roomNumber: this.socketService.getRoomNumber(),\r\n    });\r\n    this.store.dispatch(playerMessageApprovedByHostCommand({payload: message}));\r\n\r\n  }\r\n\r\n  hostDisapprovePlayerMessage(message: PlayerMessage) {\r\n    this.socketService.socket.emit('playerMessageDisapprovedByHost', {\r\n      message: {...message, approvalStatus: 'disapproved'},\r\n      roomNumber: this.socketService.getRoomNumber(),\r\n    });\r\n    this.store.dispatch(playerMessageDisapprovedByHostCommand({payload: message}));\r\n  }\r\n\r\n\r\n  // 批准以玩家加入\r\n  approveAttemptToJoin(message: SystemMessage) {\r\n    this.socketService.socket.emit('approveAttemptToJoin', {\r\n      user: message.payload,\r\n      roomNumber: this.socketService.getRoomNumber(),\r\n    });\r\n    this.store.dispatch(systemMessageApprovedByHostCommand({payload: message}));\r\n\r\n  }\r\n\r\n  disapproveAttemptToJoin(message: SystemMessage) {\r\n    this.socketService.socket.emit('disapproveAttemptToJoin', {\r\n      user: message.payload,\r\n      roomNumber: this.socketService.getRoomNumber(),\r\n    });\r\n    this.store.dispatch(systemMessageApprovedByHostCommand({payload: message}));\r\n\r\n  }\r\n\r\n  hostPublishAllMessages() {\r\n    this.socketService.socket.emit('publishPendingMessages', this.socketService.getRoomNumber());\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {LandingComponent} from './components/landing/landing.component';\r\nimport {RoomComponent} from './components/room/room.component';\r\nimport {RoomGuard} from './services/room.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: '/landing',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'landing',\r\n    component: LandingComponent,\r\n  },\r\n  {\r\n    path: 'room',\r\n    component: RoomComponent,\r\n    canActivate: [RoomGuard]\r\n  },\r\n  {\r\n    path: '**',\r\n    redirectTo: 'landing'\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {\r\n}\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}